Compound({'block_states': Compound({'data': LongArray([Long(74382032519561216), Long(74418348582045762), Long(111464161713653826), Long(74382032555281507), Long(74382033663659008), Long(75544248488888386), Long(108086461993125954), Long(74382032555314275), Long(76670151720697856), Long(111572942428603522), Long(175123827811), Long(111573048832920672), Long(111573048762564608), Long(111499275149610083), Long(106404351075), Long(111573048832853024), Long(111570778873397249), Long(37190980810673251), Long(36390288067617), Long(111572977896686625), Long(37191016277640225), Long(74344578223735841), Long(70936234050), Long(74382032555280416), Long(74382034737397760), Long(75544248488888386), Long(70936234050), Long(74382032555281507), Long(74382102383034368), Long(111572942428637250), Long(35502753924), Long(183630642870848608), Long(111573048829673472), Long(111499275149610083), Long(106404351075), Long(111573048832918560), Long(111572978104270854), Long(37408719753022563), Long(37372506632457313), Long(111573048763647009), Long(37191016277640230), Long(37191016282950755), Long(35468117025), Long(74382032555280513), Long(74382032520609792), Long(74590868828391490), Long(70936234050), Long(74382032555281504), Long(74382033660411904), Long(75540846874789954), Long(70936234050), Long(40605035350035552), Long(147602017580220416), Long(111500374661177444), Long(223145922542018824), Long(111578723731473441), Long(111573046616168646), Long(37408725121731688), Long(43002006166670433), Long(111573048763647207), Long(109248610315573446), Long(37191016450722915), Long(37372506563183649), Long(37191016277640225), Long(74382032554198017), Long(74458962869684290), Long(70936234050), Long(74382032555280641), Long(74382034668093440), Long(81101077176453186), Long(36032166490081346), Long(74382032555279393), Long(74382100166377478), Long(289392600952211522), Long(223146168461365379), Long(37439582383473697), Long(297527881944471750), Long(37191193618058504), Long(43001937452605704), Long(111573048763647009), Long(109248610315573446), Long(37191021819366499), Long(43001935230436385), Long(37191016277640225), Long(37191016277645510), Long(74384436632781857), Long(37193250769012802), Long(74382032555280456), Long(74382032755524707), Long(74345713272686658), Long(39515419326875714), Long(74382032555286561), Long(74382031446903907), Long(73219818838362178), Long(223145955793373250), Long(297310214112412705), Long(153412934386784454), Long(289392772750811396), Long(223145920567714056), Long(37445251740238881), Long(37191016277645510), Long(37191193618056225), Long(223145920325256225), Long(37191016277640225), Long(37191016277645510), Long(37191021819364385), Long(289392595410388001), Long(74382032555280450), Long(74382032561538083), Long(74592003877308482), Long(37263619513190466), Long(74382032555280641), Long(74382038963096675), Long(81101114861226050), Long(39624270978025538), Long(74382032555286561), Long(74382237605337286), Long(289392772751040578), Long(223145923648229508), Long(40677674053796897), Long(148763958706378950), Long(37191021819364484), Long(223145920325256225), Long(37191016277640225), Long(37191016277645510), Long(37191021819364385), Long(43001935230436385), Long(37191016277640225), Long(74382032555476001), Long(74388834677229634), Long(37263619513190466), Long(74382032555280456), Long(74382032755524707), Long(81101112713742402), Long(39515419326875714), Long(74382032555286561), Long(74382038963096675), Long(81101114965035074), Long(43002176856983618), Long(40675404094374945), Long(74382237605337286), Long(37191021819367554), Long(43001935332249732), Long(37191016277640225), Long(37191016277645510), Long(37191021819364385), Long(43001935230436385), Long(37191016277640225), Long(37191016554469574), Long(74382245121524769), Long(289392630878505026), Long(74382032555280450), Long(74382032561767459), Long(74592003810199618), Long(37193250769012802), Long(74382032555280641), Long(74382038963094627), Long(81101112713742402), Long(37191051745757250), Long(74382032555286561), Long(74382245121524769), Long(289392595410620482), Long(37196757609809986), Long(37297704373617697), Long(37191016277640390), Long(37191016450655265), Long(37372435696223265), Long(37191016277640225), Long(37191016277640390), Long(39733158100370465), Long(81101112644502561), Long(74382032555280450), Long(74382032555483169), Long(74388834675132482), Long(37191051745757250), Long(74382032555280648), Long(74382032755524641), Long(81347403249158210), Long(37191051745757250), Long(74382032555286785), Long(74382038963094561), Long(81101112644536386), Long(37191257904187458), Long(292806614482755617), Long(74381997087163425), Long(37191016277640258), Long(37191016277640225), Long(37191016277640225), Long(37191016277640230), Long(111573048768889889), Long(111572977896686625), Long(37191016279805027), Long(74382032555286785), Long(74382245356439618), Long(297273930226403394), Long(74382032555280456), Long(74382032561767457), Long(74592003808102466), Long(37191051745757250), Long(74382032555280641), Long(74382032755524641), Long(81347403249158210), Long(37191051745757250), Long(290554814669070593), Long(74382038963094561), Long(37191016277870658), Long(37191019533502530), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(111570778873431073), Long(37191016279805027), Long(37193286237129827), Long(74382039205315617), Long(81347438717241410), Long(74382032555280450), Long(74382032555483393), Long(74388842426206274), Long(297273930226403394), Long(74382032555280648), Long(74382032763094049), Long(74599700389496898), Long(37191051745757250), Long(74382032555280641), Long(74382039197975585), Long(81101112644732994), Long(37191257904187458), Long(297310214110086177), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(37193286237129825), Long(111573048832853025), Long(74599700389463075), Long(74382032555280450), Long(74382032555286792), Long(74382039205349442), Long(297527917412419650), Long(74382032555280456), Long(74382032561774856), Long(74599948666079298), Long(297520220831025218), Long(74382032555280648), Long(74382032763101217), Long(74592003808102466), Long(37191051745757250), Long(74382032555286561), Long(74381997087163425), Long(37191016277876802), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(111573048763647009), Long(111572977896686625), Long(37191016279805027), Long(74382032555280648), Long(74382032762898498), Long(81355135298635842), Long(74382032555280450), Long(74382032555483400), Long(74388842433546306), Long(297527917412419650), Long(74382032555280456), Long(74382032561774856), Long(74599948666079298), Long(297273930226403394), Long(74382032555280648), Long(74382032755721258), Long(37191016287111234), Long(37191264346638402), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(37191018494397537), Long(74382032863527969), Long(74388629625047106), Long(74382032555280450), Long(74382032555280648), Long(74382039205349442), Long(297527917412419650), Long(74382032555280456), Long(74382032561774856), Long(74388842433546306), Long(297527917412419650), Long(74382032555280456), Long(74382032561774856), Long(74592216408983618), Long(260330339533129794), Long(290554814669259809), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(37191016277640225), Long(74733840808051745), Long(74382032555280450), Long(74382032555280461), Long(74382032566814786), Long(74394127183185986), Long(74382032555280450), Long(74382032555280813), Long(74382044747073602), Long(477847824367683650), Long(74382032555280450), Long(74382032567186696), Long(74388842433546306), Long(297520220831025218), Long(74382032555280648), Long(74382245356411937), Long(37191016277674050), Long(37191023793832993), Long(45318606230160417), Long(37191016277640225), Long(37191016277647617), Long(37191016277640225), Long(37191016277640225), Long(520674227886963150), Long(520674227886963150), Long(520674227886963150), Long(520674227886963150), Long(520674227886963151), Long(520674227886963150), Long(520674227886963150), Long(520674227886963150), Long(520674227886965197), Long(520674227852360142), Long(483301827658856910), Long(520674227886963149), Long(520674227846914312), Long(297527881944742350), Long(37191477363161550), Long(297520185362908193), Long(37191016277640225), Long(37191016277741704), Long(37191122686084129), Long(45326302811554849), Long(37191016277640225), Long(33825)]), 'palette': List[Compound]([Compound({'Name': String('minecraft:granite')}), Compound({'Name': String('minecraft:stone')}), Compound({'Properties': Compound({'level': String('0')}), 'Name': String('minecraft:water')}), Compound({'Name': String('minecraft:diorite')}), Compound({'Name': String('minecraft:gravel')}), Compound({'Name': String('minecraft:iron_ore')}), Compound({'Name': String('minecraft:andesite')}), Compound({'Name': String('minecraft:copper_ore')}), Compound({'Name': String('minecraft:dirt')}), Compound({'Name': String('minecraft:coal_ore')}), Compound({'Name': String('minecraft:lapis_ore')}), Compound({'Properties': Compound({'half': String('lower')}), 'Name': String('minecraft:tall_seagrass')}), Compound({'Properties': Compound({'half': String('upper')}), 'Name': String('minecraft:tall_seagrass')}), Compound({'Properties': Compound({'snowy': String('false')}), 'Name': String('minecraft:grass_block')}), Compound({'Name': String('minecraft:air')}), Compound({'Name': String('minecraft:grass')}), Compound({'Properties': Compound({'axis': String('y')}), 'Name': String('minecraft:birch_log')})])}), 'SkyLight': ByteArray([Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(17), Byte(17), Byte(17), Byte(17), Byte(17), Byte(0), Byte(0), Byte(0), Byte(17), Byte(17), Byte(17), Byte(17), Byte(17), Byte(0), Byte(0), Byte(0), Byte(16), Byte(17), Byte(17), Byte(17), Byte(17), Byte(0), Byte(0), Byte(0), Byte(16), Byte(17), Byte(17), Byte(17), Byte(17), Byte(0), Byte(0), Byte(0), Byte(16), Byte(17), Byte(17), Byte(17), Byte(17), Byte(0), Byte(0), Byte(0), Byte(0), Byte(17), Byte(17), Byte(17), Byte(17), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(17), Byte(17), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(34), Byte(34), Byte(34), Byte(34), Byte(34), Byte(0), Byte(0), Byte(0), Byte(34), Byte(34), Byte(34), Byte(34), Byte(34), Byte(0), Byte(0), Byte(0), Byte(34), Byte(34), Byte(34), Byte(34), Byte(34), Byte(0), Byte(0), Byte(0), Byte(32), Byte(34), Byte(34), Byte(34), Byte(34), Byte(0), Byte(0), Byte(0), Byte(32), Byte(34), Byte(34), Byte(34), Byte(34), Byte(0), Byte(0), Byte(0), Byte(32), Byte(34), Byte(34), Byte(34), Byte(34), Byte(0), Byte(0), Byte(0), Byte(0), Byte(34), Byte(34), Byte(34), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(48), Byte(51), Byte(51), Byte(51), Byte(51), Byte(51), Byte(0), Byte(0), Byte(0), Byte(51), Byte(51), Byte(51), Byte(51), Byte(51), Byte(0), Byte(0), Byte(0), Byte(51), Byte(51), Byte(51), Byte(51), Byte(51), Byte(0), Byte(0), Byte(0), Byte(48), Byte(51), Byte(51), Byte(51), Byte(51), Byte(0), Byte(0), Byte(0), Byte(48), Byte(51), Byte(51), Byte(51), Byte(51), Byte(0), Byte(0), Byte(0), Byte(48), Byte(51), Byte(51), Byte(51), Byte(51), Byte(0), Byte(0), Byte(0), Byte(0), Byte(51), Byte(51), Byte(51), Byte(3), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(48), Byte(3), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(64), Byte(68), Byte(68), Byte(68), Byte(68), Byte(68), Byte(0), Byte(0), Byte(64), Byte(68), Byte(68), Byte(68), Byte(68), Byte(68), Byte(0), Byte(0), Byte(0), Byte(68), Byte(68), Byte(68), Byte(68), Byte(68), Byte(0), Byte(0), Byte(0), Byte(68), Byte(68), Byte(68), Byte(68), Byte(68), Byte(0), Byte(0), Byte(0), Byte(64), Byte(68), Byte(68), Byte(68), Byte(68), Byte(0), Byte(0), Byte(0), Byte(64), Byte(68), Byte(68), Byte(68), Byte(68), Byte(0), Byte(0), Byte(0), Byte(64), Byte(68), Byte(68), Byte(68), Byte(68), Byte(0), Byte(0), Byte(0), Byte(0), Byte(64), Byte(68), Byte(68), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(85), Byte(85), Byte(85), Byte(85), Byte(85), Byte(85), Byte(0), Byte(0), Byte(80), Byte(85), Byte(85), Byte(85), Byte(85), Byte(85), Byte(0), Byte(0), Byte(0), Byte(85), Byte(85), Byte(85), Byte(85), Byte(85), Byte(0), Byte(0), Byte(0), Byte(85), Byte(85), Byte(85), Byte(85), Byte(85), Byte(0), Byte(0), Byte(0), Byte(80), Byte(85), Byte(85), Byte(85), Byte(85), Byte(0), Byte(0), Byte(0), Byte(80), Byte(85), Byte(85), Byte(85), Byte(85), Byte(0), Byte(0), Byte(0), Byte(80), Byte(85), Byte(85), Byte(85), Byte(85), Byte(0), Byte(0), Byte(0), Byte(0), Byte(85), Byte(85), Byte(85), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(80), Byte(5), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(102), Byte(102), Byte(102), Byte(102), Byte(102), Byte(102), Byte(0), Byte(0), Byte(96), Byte(102), Byte(102), Byte(102), Byte(102), Byte(102), Byte(0), Byte(0), Byte(96), Byte(102), Byte(102), Byte(102), Byte(102), Byte(102), Byte(0), Byte(0), Byte(0), Byte(102), Byte(102), Byte(102), Byte(102), Byte(102), Byte(0), Byte(0), Byte(0), Byte(96), Byte(102), Byte(102), Byte(102), Byte(102), Byte(0), Byte(0), Byte(0), Byte(96), Byte(102), Byte(102), Byte(102), Byte(102), Byte(0), Byte(0), Byte(0), Byte(96), Byte(102), Byte(102), Byte(102), Byte(102), Byte(0), Byte(0), Byte(0), Byte(96), Byte(102), Byte(102), Byte(102), Byte(6), Byte(0), Byte(0), Byte(0), Byte(0), Byte(102), Byte(102), Byte(6), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(102), Byte(102), Byte(6), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(6), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(119), Byte(119), Byte(119), Byte(119), Byte(119), Byte(119), Byte(0), Byte(0), Byte(119), Byte(119), Byte(119), Byte(119), Byte(119), Byte(119), Byte(0), Byte(0), Byte(112), Byte(119), Byte(119), Byte(119), Byte(119), Byte(119), Byte(0), Byte(0), Byte(0), Byte(119), Byte(119), Byte(119), Byte(119), Byte(119), Byte(0), Byte(0), Byte(0), Byte(119), Byte(119), Byte(119), Byte(119), Byte(119), Byte(0), Byte(0), Byte(0), Byte(112), Byte(119), Byte(119), Byte(119), Byte(119), Byte(0), Byte(0), Byte(0), Byte(112), Byte(119), Byte(119), Byte(119), Byte(119), Byte(0), Byte(0), Byte(0), Byte(112), Byte(119), Byte(119), Byte(119), Byte(119), Byte(0), Byte(0), Byte(0), Byte(0), Byte(119), Byte(119), Byte(119), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(119), Byte(119), Byte(119), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(119), Byte(119), Byte(7), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-128), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(0), Byte(0), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(0), Byte(0), Byte(-128), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(0), Byte(0), Byte(0), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(0), Byte(0), Byte(0), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(0), Byte(0), Byte(0), Byte(-128), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(0), Byte(0), Byte(0), Byte(-128), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(0), Byte(0), Byte(0), Byte(-128), Byte(-120), Byte(-120), Byte(-120), Byte(-120), Byte(0), Byte(0), Byte(0), Byte(-128), Byte(-120), Byte(-120), Byte(-120), Byte(8), Byte(0), Byte(0), Byte(0), Byte(-128), Byte(-120), Byte(-120), Byte(-120), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-120), Byte(-120), Byte(-120), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-112), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(0), Byte(0), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(0), Byte(0), Byte(-112), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(0), Byte(0), Byte(-112), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(0), Byte(0), Byte(0), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(0), Byte(0), Byte(0), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(0), Byte(0), Byte(0), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(0), Byte(0), Byte(0), Byte(-112), Byte(-103), Byte(-103), Byte(-103), Byte(-103), Byte(0), Byte(0), Byte(0), Byte(-112), Byte(-103), Byte(-103), Byte(-103), Byte(9), Byte(0), Byte(0), Byte(0), Byte(-112), Byte(-103), Byte(-103), Byte(-103), Byte(9), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-103), Byte(-103), Byte(-103), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-96), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(0), Byte(-96), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(0), Byte(0), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(0), Byte(0), Byte(-96), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(0), Byte(0), Byte(0), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(0), Byte(0), Byte(0), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(0), Byte(0), Byte(0), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(0), Byte(0), Byte(0), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(-86), Byte(0), Byte(0), Byte(0), Byte(-96), Byte(-86), Byte(-86), Byte(-86), Byte(10), Byte(0), Byte(0), Byte(0), Byte(-96), Byte(-86), Byte(-86), Byte(-86), Byte(10), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-86), Byte(-86), Byte(-86), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(-80), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(-80), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(0), Byte(-80), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(0), Byte(-80), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(0), Byte(0), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(0), Byte(0), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(0), Byte(0), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(0), Byte(0), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(0), Byte(0), Byte(-80), Byte(-69), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-69), Byte(-69), Byte(-69), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(-64), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(0), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(0), Byte(-64), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(0), Byte(-64), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(0), Byte(-64), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(0), Byte(0), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(0), Byte(0), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(0), Byte(0), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-52), Byte(-52), Byte(-52), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-48), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-48), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(0), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(0), Byte(-48), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(0), Byte(0), Byte(-48), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(0), Byte(0), Byte(-48), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(0), Byte(0), Byte(-48), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(0), Byte(0), Byte(-48), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(0), Byte(0), Byte(-48), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(0), Byte(0), Byte(0), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(-35), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-35), Byte(-35), Byte(-35), Byte(13), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-32), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-32), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-32), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(0), Byte(-35), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(0), Byte(-64), Byte(-19), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(0), Byte(0), Byte(-19), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(0), Byte(0), Byte(-32), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(0), Byte(0), Byte(-32), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(0), Byte(0), Byte(0), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-18), Byte(-18), Byte(-18), Byte(-18), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-18), Byte(-18), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-34), Byte(-35), Byte(-2), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-64), Byte(-48), Byte(-2), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(0), Byte(-36), Byte(-2), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(0), Byte(0), Byte(-16), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(0), Byte(0), Byte(0), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(0), Byte(0), Byte(0), Byte(0), Byte(-1), Byte(-1), Byte(-1), Byte(-1), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0), Byte(0)]), 'biomes': Compound({'data': LongArray([Long(57421771435671756)]), 'palette': List[String]([String('minecraft:old_growth_birch_forest'), String('minecraft:river')])}), 'Y': Byte(3)})